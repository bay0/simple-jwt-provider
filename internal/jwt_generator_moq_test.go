// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package internal

import (
	"sync"
)

var (
	lockJWTGeneratorMockGenerate sync.RWMutex
)

// Ensure, that JWTGeneratorMock does implement JWTGenerator.
// If this is not the case, regenerate this file with moq.
var _ JWTGenerator = &JWTGeneratorMock{}

// JWTGeneratorMock is a mock implementation of JWTGenerator.
//
//     func TestSomethingThatUsesJWTGenerator(t *testing.T) {
//
//         // make and configure a mocked JWTGenerator
//         mockedJWTGenerator := &JWTGeneratorMock{
//             GenerateFunc: func(email string, userClaims map[string]interface{}) (string, error) {
// 	               panic("mock out the Generate method")
//             },
//         }
//
//         // use mockedJWTGenerator in code that requires JWTGenerator
//         // and then make assertions.
//
//     }
type JWTGeneratorMock struct {
	// GenerateFunc mocks the Generate method.
	GenerateFunc func(email string, userClaims map[string]interface{}) (string, error)

	// calls tracks calls to the methods.
	calls struct {
		// Generate holds details about calls to the Generate method.
		Generate []struct {
			// Email is the email argument value.
			Email string
			// UserClaims is the userClaims argument value.
			UserClaims map[string]interface{}
		}
	}
}

// Generate calls GenerateFunc.
func (mock *JWTGeneratorMock) Generate(email string, userClaims map[string]interface{}) (string, error) {
	if mock.GenerateFunc == nil {
		panic("JWTGeneratorMock.GenerateFunc: method is nil but JWTGenerator.Generate was just called")
	}
	callInfo := struct {
		Email      string
		UserClaims map[string]interface{}
	}{
		Email:      email,
		UserClaims: userClaims,
	}
	lockJWTGeneratorMockGenerate.Lock()
	mock.calls.Generate = append(mock.calls.Generate, callInfo)
	lockJWTGeneratorMockGenerate.Unlock()
	return mock.GenerateFunc(email, userClaims)
}

// GenerateCalls gets all the calls that were made to Generate.
// Check the length with:
//     len(mockedJWTGenerator.GenerateCalls())
func (mock *JWTGeneratorMock) GenerateCalls() []struct {
	Email      string
	UserClaims map[string]interface{}
} {
	var calls []struct {
		Email      string
		UserClaims map[string]interface{}
	}
	lockJWTGeneratorMockGenerate.RLock()
	calls = mock.calls.Generate
	lockJWTGeneratorMockGenerate.RUnlock()
	return calls
}
